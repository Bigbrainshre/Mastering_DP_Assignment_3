class Solution {
public:
    int f(int i, int status, vector<int>& prices, vector<vector<int>>& dp) {
        if (i >= prices.size()) return 0;

        if (dp[i][status] != -1) return dp[i][status];

        int profit = 0;

        if (status == 0) {
            
            int buy = -prices[i] + f(i + 1, 1, prices, dp);
            int skip = f(i + 1, 0, prices, dp);
            profit = max(buy, skip);
        } else if (status == 1) {
            
            int sell = prices[i] + f(i + 1, 2, prices, dp); 
            int skip = f(i + 1, 1, prices, dp);
            profit = max(sell, skip);
        } else if (status == 2) {
            
            profit = f(i + 1, 0, prices, dp);
        }

        return dp[i][status] = profit;
    }

    int maxProfit(vector<int>& prices) {
        int n = prices.size();
        vector<vector<int>> dp(n, vector<int>(3, -1));
        return f(0, 0, prices, dp);  
    }
};
